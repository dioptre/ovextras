# ---------------------------------
# Finds LabStreamingLayer (LSL) library
#
# Sets LSL_FOUND
# Sets LSL_INCLUDE_DIRS
# Sets LSL_LIBRARY_DIRS
# Sets LSL_LIBRARIES_RELEASE
# Sets LSL_LIBRARIES_DEBUG
#
# Adds library to target
# Adds include path
#
# Script @author Jussi T. Lindgren / Inria
#
# ---------------------------------

GET_PROPERTY(OV_PRINTED GLOBAL PROPERTY OV_TRIED_ThirdPartyLSL)

# The first ${..}/liblsl path is for Windows, the second ${..}/ for Linux
FIND_PATH(PATH_LSL include/lsl_cpp.h PATHS ${LIST_DEPENDENCIES_PATH} PATH_SUFFIXES . liblsl NO_DEFAULT_PATH)
FIND_PATH(PATH_LSL include/lsl_cpp.h PATHS ${LIST_DEPENDENCIES_PATH} PATH_SUFFIXES . liblsl)

IF(PATH_LSL)
	SET(LSL_FOUND TRUE)
	SET(LSL_INCLUDE_DIRS ${PATH_LSL}/include/)
	SET(LSL_LIBRARY_DIRS ${PATH_LSL}/lib/)
	IF(WIN32)
		SET(LSL_LIBRARIES_RELEASE liblsl32.lib)
		SET(LSL_LIBRARIES_DEBUG liblsl32-debug.lib)		
	ENDIF(WIN32)
	IF(UNIX)
		SET(LSL_LIBRARIES_RELEASE liblsl.so)
		SET(LSL_LIBRARIES_DEBUG liblsl.so)		
	ENDIF(UNIX)
ENDIF(PATH_LSL)

IF(LSL_FOUND)
	OV_PRINT(OV_PRINTED "  Found liblsl...")
	INCLUDE_DIRECTORIES(${LSL_INCLUDE_DIRS})
	FOREACH(LSL_LIB ${LSL_LIBRARIES_RELEASE})
		SET(LSL_LIB1 "LSL_LIB1-NOTFOUND")
		# OV_PRINT(OV_PRINTED "LSL: ${LSL_LIB} - ${LSL_LIBRARY_DIRS_RELEASE}")
		FIND_LIBRARY(LSL_LIB1 NAMES ${LSL_LIB} PATHS ${LSL_LIBRARY_DIRS} NO_DEFAULT_PATH)
		IF(LSL_LIB1)
			OV_PRINT(OV_PRINTED "    [  OK  ] Third party lib ${LSL_LIB1}")
			TARGET_LINK_LIBRARIES(${PROJECT_NAME} optimized ${LSL_LIB1})
		ELSE(LSL_LIB1)
			OV_PRINT(OV_PRINTED "    [FAILED] Third party lib ${LSL_LIB1}")
		ENDIF(LSL_LIB1)	
	ENDFOREACH(LSL_LIB)
	FOREACH(LSL_LIB ${LSL_LIBRARIES_DEBUG})
		SET(LSL_LIB1 "LSL_LIB1-NOTFOUND")
		# OV_PRINT(OV_PRINTED "LSL: ${LSL_LIB} - ${LSL_LIBRARY_DIRS_DEBUG}")		
		FIND_LIBRARY(LSL_LIB1 NAMES ${LSL_LIB} PATHS ${LSL_LIBRARY_DIRS} NO_DEFAULT_PATH)
		IF(LSL_LIB1)
			OV_PRINT(OV_PRINTED "    [  OK  ] Third party lib ${LSL_LIB1}")
			TARGET_LINK_LIBRARIES(${PROJECT_NAME} debug ${LSL_LIB1})
		ELSE(LSL_LIB1)
			OV_PRINT(OV_PRINTED "    [FAILED] Third party lib ${LSL_LIB1}")
		ENDIF(LSL_LIB1)	
	ENDFOREACH(LSL_LIB)	

	ADD_DEFINITIONS(-DTARGET_HAS_ThirdPartyLSL)
ELSE(LSL_FOUND)
	OV_PRINT(OV_PRINTED "  FAILED to find liblsl (optional) ...")
ENDIF(LSL_FOUND)

SET_PROPERTY(GLOBAL PROPERTY OV_TRIED_ThirdPartyLSL "Yes")

